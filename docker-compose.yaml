version: '3.1'
services:
  # Backend service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    # ports:
    #   - "1337:1337"
    environment:
      - MONGO_URI=mongodb://mongos_container:27017/music_streaming
      - JWT_SECRET=eyJhbGciOiJIUzI1NiJ9.eyJSb2xlIjoiQWRtaW4iLCJJc3N1ZXIiOiJJc3N1ZXIiLCJVc2VybmFtZSI6IkphdmFJblVzZSIsImV4cCI6MTcyOTA5MDMwOCwiaWF0IjoxNzI5MDkwMzA4fQ.rupFvTyZwxI_oeZydy3gmxJv9SPiik9-PqjZQwze1mY
    depends_on:
      - shard1-primary
      - shard2-secondary
      - redis
      - mongos
    networks:
      - musicapp-network
    restart: unless-stopped
    deploy:
      replicas: 5
  
  redis:
    image: redis:alpine
    container_name: redis_container
    ports:
      - "6379:6379"
    networks:
      - musicapp-network

  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    # ports:
    #   - "5173:5173"
    depends_on:
      - nginx
    networks:
      - musicapp-network

  # Config Server
  configsvr:
    image: mongo:8.0.1-noble
    container_name: configsvr_container
    command: mongod --configsvr --replSet configReplSet --port 27017
    # ports:
    #   - "27017:27017"
    links:
      - shard1-primary
      - shard2-secondary
    networks:
      - musicapp-network

  # Shard 1 - Primary
  shard1-primary:
    image: mongo:8.0.1-noble
    container_name: shard1-primary_container
    command: mongod --shardsvr --replSet shard1 --port 27017
    # ports:
    #   - "27018:27017"
    networks:
      - musicapp-network

  # Shard 2 - Secondary
  shard2-secondary:
    image: mongo:8.0.1-noble
    container_name: shard2-secondary_container
    command: mongod --shardsvr --replSet shard2 --port 27017
    # ports:
    #   - "27019:27017"
    networks:
      - musicapp-network

  # Mongos Router
  mongos:
    image: mongo:8.0.1-noble
    container_name: mongos_container
    depends_on:
      - configsvr
      - shard1-primary
      - shard2-secondary
    command: mongos --configdb configReplSet/configsvr:27017 --bind_ip_all
    ports:
      - "27017:27017"
    networks:
      - musicapp-network

  nginx:
    image: nginx:latest
    restart: unless-stopped
    ports:
      - "1337:80"
    networks:
      - musicapp-network
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - backend

volumes:
  shard1-primary:
  shard2-secondary:

networks:
  musicapp-network:
    driver: bridge