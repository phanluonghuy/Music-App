version: '3.8'
services:
  # Backend service
  backend:
    # build:
    #   context: ./backend
    #   dockerfile: Dockerfile
    image: huyphanluong/music-app-backend:v2
    environment:
      - MONGO_URI=mongodb://webapp_mongo:27017/music_streaming
      - JWT_SECRET=eyJhbGciOiJIUzI1NiJ9.eyJSb2xlIjoiQWRtaW4iLCJJc3N1ZXIiOiJJc3N1ZXIiLCJVc2VybmFtZSI6IkphdmFJblVzZSIsImV4cCI6MTcyOTA5MDMwOCwiaWF0IjoxNzI5MDkwMzA4fQ.rupFvTyZwxI_oeZydy3gmxJv9SPiik9-PqjZQwze1mY
      - WEB_URI=23.102.234.224
    depends_on:
      - mongo
      - redis
    ports:
      - "1337:1337"
    restart: unless-stopped
    networks:
      - musicapp-network
    # deploy:
    #   replicas: 5
    #   restart_policy:
    #     condition: on-failure

  # Redis service
  redis:
    image: redis:alpine
    networks:
      - musicapp-network
    #ports:
     # - "6379:6379"
    deploy:
      restart_policy:
        condition: on-failure

  # Frontend service
  frontend:
    # build:
    #   context: ./frontend
    #   dockerfile: Dockerfile
    image: huyphanluong/music-app-frontend:v2
    #ports:
     # - "5173:5173"
    networks:
      - musicapp-network
    depends_on:
      - nginx

  # MongoDB service
  mongo:
    image: mongo:latest
    container_name: mongo_container
    environment:
      - MONGO_INITDB_DATABASE=music_streaming
    networks:
      - musicapp-network
    #ports:
     # - "27017:27017"
    volumes:
      - mongo_data:/data/db
    deploy:
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure

  # Nginx service
  nginx:
    image: nginx:latest
    networks:
      - musicapp-network
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      #- ./nginx-entrypoint.sh:/docker-entrypoint.d/00-nginx-entrypoint.sh
      # - ./nginx.conf:/etc/nginx/nginx.conf.template  # Use the template version of nginx.conf
    depends_on:
      - backend
      - frontend
    environment:
      - SERVER_IP=23.102.234.224  # Set IP address for Nginx as an environment variable
    deploy:
      restart_policy:
        condition: on-failure


volumes:
  mongo_data:

networks:
  musicapp-network:
    driver: overlay