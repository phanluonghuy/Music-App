version: '3.1'
services:
  # Backend service
  backend:
    build: ./backend
    ports:
      - "1337:1337"
    depends_on:
      - mongo-primary
      - redis
    networks:
      - musicapp-network

  redis:
    image: redis:alpine
    container_name: redis_container
    ports:
      - "6379:6379"
    networks:
      - musicapp-network
  # Frontend service
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    # command: npm run dev -- --host
    networks:
      - musicapp-network


  # MongoDB service
  mongo-primary:
    container_name: mongo-primary
    image: mongo:8.0.1-noble
    ports:
      - "27017:27017"
    command: mongod --replSet "rs0"
    environment:
      - MONGO_INITDB_REPLICASET=rs0
    volumes:
      - ./mongodb/primary:/data/db
    restart: always
    networks:
      - musicapp-network

  mongo-secondary-1:
    container_name: mongo-secondary-1
    image: mongo:8.0.1-noble
    ports:
      - "27018:27017"
    command: mongod --replSet "rs0"
    environment:
      - MONGO_INITDB_REPLICASET=rs0
    volumes:
      - ./mongodb/secondary1:/data/db
    restart: always
    networks:
      - musicapp-network

  mongo-secondary-2:
    container_name: mongo-secondary-2
    image: mongo:8.0.1-noble
    ports:
      - "27019:27017"
    command: mongod --replSet "rs0"
    environment:
      - MONGO_INITDB_REPLICASET=rs0
    volumes:
      - ./mongodb/secondary2:/data/db
    restart: always
    networks:
      - musicapp-network

  mongo-secondary-3:
    container_name: mongo-secondary-3
    image: mongo:8.0.1-noble
    ports:
      - "27020:27017"
    command: mongod --replSet "rs0"
    environment:
      - MONGO_INITDB_REPLICASET=rs0
    volumes:
      - ./mongodb/secondary3:/data/db
    restart: always
    networks:
      - musicapp-network
  mongo-init-replica:
    image: mongo:8.0.1-noble
    depends_on:
      - mongo-primary
      - mongo-secondary-1
      - mongo-secondary-2
      - mongo-secondary-3
    networks:
      - musicapp-network
    entrypoint: [
      "sh", "-c", "
      sleep 10;
      mongo --host mongo-primary:27017 <<EOF
        rs.initiate({
          _id: 'rs0',
          members: [
            { _id: 0, host: 'mongo-primary:27017', priority: 2 },
            { _id: 1, host: 'mongo-secondary-1:27017', priority: 1 },
            { _id: 2, host: 'mongo-secondary-2:27017', priority: 0 },
            { _id: 3, host: 'mongo-secondary-3:27017', priority: 0 }
          ]
        })
      EOF
      "
    ]

volumes:
  mongo-primary:
  mongo-secondary-1:
  mongo-secondary-2:
  mongo-secondary-3:

networks:
  musicapp-network:
    driver: bridge