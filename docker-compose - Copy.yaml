version: '3.1'
services:
  # Backend service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - MONGO_URI=mongodb://mongo:27017/music_streaming
      - JWT_SECRET=eyJhbGciOiJIUzI1NiJ9.eyJSb2xlIjoiQWRtaW4iLCJJc3N1ZXIiOiJJc3N1ZXIiLCJVc2VybmFtZSI6IkphdmFJblVzZSIsImV4cCI6MTcyOTA5MDMwOCwiaWF0IjoxNzI5MDkwMzA4fQ.rupFvTyZwxI_oeZydy3gmxJv9SPiik9-PqjZQwze1mY
    depends_on:
      - mongo
      - redis
    networks:
      - musicapp-network
    restart: unless-stopped
    # deploy:
    #   replicas: 5
  
  redis:
    image: redis:alpine
    container_name: redis_container
    ports:
      - "6379:6379"
    networks:
      - musicapp-network

  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    depends_on:
      - nginx
    networks:
      - musicapp-network

  # Single MongoDB service
  mongo:
    image: mongo:8.0.1-noble
    container_name: mongo_container
    command: mongod --port 27017
    environment:
      - MONGO_INITDB_DATABASE=music_streaming
    ports:
      - "27017:27017"
    networks:
      - musicapp-network
    volumes:
      - ./mongodb/data:/data/db
    restart: always

  nginx:
    image: nginx:latest
    restart: unless-stopped
    ports:
      - "1337:80"
    networks:
      - musicapp-network
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - backend

volumes:
  mongo_data:

networks:
  musicapp-network:
    driver: bridge